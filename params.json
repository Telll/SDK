{
  "name": "SDK",
  "tagline": "Telll core SDK",
  "body": "[![Stories in Ready](https://badge.waffle.io/Telll/SDK.png?label=ready&title=Ready)](https://waffle.io/Telll/SDK)\r\n\r\n# [Telll core SDK](http://telll.github.io/SDK/)\r\n\r\nThe SDK is a collection of classes and helpers to communicate with telll TWS (REST and Websockets services) and implement the widgets used in telll webapp.\r\n\r\n- License: GPLAffero 3.0 https://github.com/Telll/SDK/blob/master/LICENSE\r\n- Terms of Service: https://github.com/Telll/telll.github.io/wiki/Telll-Terms-of-Service\r\n- [Download telllSDK.js stable](https://raw.githubusercontent.com/Telll/webapp/master/www/js/telllSDK.js)\r\n- TWS docs: http://telll.github.io/tws/\r\n- SDK jsdoc:  http://telll.github.io/SDK/telllSDK\r\n- Clone and develop: https://github.com/Telll/SDK\r\n\r\n## Example implementation:\r\n\r\n### App\r\nhttp://webapp.telll.me/\r\n\r\n### XDK project\r\nhttps://github.com/Telll/webapp\r\n\r\n## Important classes:\r\n\r\n1. [Telll] (http://telll.github.io/SDK/telllSDK/Telll.html)\r\nFacade class for telll commands\r\n\r\n1. [Tws](http://telll.github.io/SDK/telllSDK/Tws.html)\r\nFacade class for API helpers\r\n\r\n1. [Auth](http://telll.github.io/SDK/telllSDK/Auth.html)\r\nAuthentication class\r\n\r\n1. [TagPlayer](http://telll.github.io/SDK/telllSDK/TagPlayer.html)\r\nView implementing the telll scheduling, sincronizes with a MockPlayer object.\r\n\r\n1. [MockPlayer](http://telll.github.io/SDK/telllSDK/MockPlayer.html)\r\nA simple iPlayer implementation for video tags. Syncs with a TagPlayer object.\r\n\r\n## interfaces\r\n[iView](http://telll.github.io/SDK/telllSDK/iView.html)\r\nWidgets and UI\r\n\r\n[iPlayer](http://telll.github.io/SDK/telllSDK/iPlayer.html)\r\nSync tool with a video tag\r\n\r\n[iData](http://telll.github.io/SDK/telllSDK/iData.html)\r\nModel interface for API data\r\n\r\n## Helpers:\r\n\r\n1. Tws.getMovie()\r\n\r\n1. Tws.getPhotolink()\r\n\r\n1. Tws.getPhotolinksOfMovie()\r\n\r\n1. Tws.moviesList()\r\n\r\n1. Tws.readUserPhotolinks()\r\n\r\n1. Tws.saveUser(data, id)\r\n\r\n1. Tws.self()\r\n\r\n1. Tws.sendPhotolink()\r\n\r\n1. Tws.user()\r\n\r\n## UI:\r\n4. Telll.wsAuth(data)\r\n5. Telll.login(data)\r\n6. Telll.logout(data)\r\n1. telll.showMoviePage(movie, cb) â†’ {MoviePage}\r\n1. telll.showTagPlayer(player)\r\n2. telll.showTelllBtn(trkm)\r\n3. telll.syncPlayer(tagPlayer, moviePlayer)\r\n4. Telll.sendPhotolink(data)\r\n5. Telll.showClickbox(data)\r\n6. Telll.showMockPlayer()\r\n\r\n\r\n# Integrations\r\n\r\n### Technology: multimedia inline links\r\ntelllSDK is a library to manage multimedia inline links.\r\n\r\ntelllSDK can be very easy to use to integrate, manage and control non intrusive advertising in mobile application.\r\n\r\n# javascript\r\n\r\nThe fulll javascript version is the file telllSDK.js that contains:\r\n- jQuery \r\n- Browserify\r\n- Mustache\r\n- TV4\r\n- The telll SDK framework\r\n\r\n### 1. Download and compile\r\n\r\n#### Requirements:\r\n- node.js\r\n- npm\r\n- perl 5.10 or superior\r\n\r\nUse the commands bellow in a terminal (Linux, OSX, CygWin)\r\n\r\n```shell\r\ngit clone https://github.com/Telll/SDK.git\r\ncd SDK/telllSDK/src/js\r\nnpm build\r\n```\r\n\r\nYou can also launch a local development server:  \r\n```shell\r\nnpm start\r\n```\r\n\r\nYou have a working copy under build/js:\r\n\r\n```shell\r\ncd -\r\nls SDK/telllSDK/build/js\r\n\r\n```\r\nCopy it to your web server and begin using telll\r\n\r\n### 2. Setup and configuration\r\n\r\n```javascript\r\n/* Basic telll load with jQuery*/\r\n/* Example */\r\nfunction exampleImplementation (){\r\nconsole.log('Loading example implementation ...');\r\n\r\nmyAdTest = new telllSDK.Telll();\r\nconsole.info('telll: ', myAdTest);\r\n// We may do it for a simplest aproach\r\n// myAdTest.start();\r\n\r\n// Detect if local machine is off line each 3600 seconds\r\nsetInterval( function(){\r\n $.ajax({\r\n   type: \"GET\",\r\n   cache: null,\r\n   url: \"http://\"+myAdTest.conf.host+\"/ws\"\r\n }).fail( function() {\r\n   alert('Connection seems down! Please check your Internet.');\r\n });\r\n},3600000);\r\n\r\n\r\n\r\n// After login create the buttons\r\nmyAdTest.login(null, function(){\r\n    // define the instance player\r\n    var myPlayer = {\"error\":\"Player not loaded!!!\"};\r\n    // create buttons\r\n    $('<input type=\"button\" value=\"Dashboard\">').appendTo('body').on('click', function(){myAdTest.showDashboard()});\r\n    $('<input type=\"button\" value=\"Clickbox\">').appendTo('body').on('click', function(){myAdTest.showClickbox()});\r\n    $('<input type=\"button\" value=\"Movies List\">').appendTo('body').on('click', \r\n\t    function(){\r\n            // showMoviesList runs the callback after a movie is selected\r\n\t\t    myAdTest.showMoviesList(function(m){\r\n                        console.log(\"Movie selected: \"+m.getTitle());\r\n                        console.log(m);\r\n                    })\r\n\t    });\r\n   $('<input type=\"button\" value=\"Mock Player\">').appendTo('body').on('click', \r\n\t   function(){\r\n            // showMockPlayer runs the callback after load\r\n\t\t   myAdTest.showMockPlayer( function(m){\r\n                       myPlayer = m;       \r\n\t\t       console.log(m); \r\n\t\t   })\r\n\t   });\r\n    $('<input type=\"button\" value=\"Telll Movie Player\">').appendTo('body').on('click', function(){myAdTest.showMoviePlayer()});\r\n    $('<input type=\"button\" value=\"Youtube Player\">').appendTo('body').on('click', function(){myAdTest.showYoutubePlayer()});\r\n    $('<input type=\"button\" value=\"Tag Player\">').appendTo('body').on('click', \r\n\t   function(){\r\n            // showTagPlayer runs the callback after load\r\n\t           myAdTest.showTagPlayer( myPlayer, function(tp){ \r\n                           console.log(tp);\r\n\t           }) \r\n\t   });\r\n    $('<input type=\"button\" value=\"Photolinks List\">').appendTo('body').on('click', function(){\r\n\t    var list = myAdTest.showPhotolinksList();\r\n\t    setTimeout(function(){\r\n\t    console.log(list);\r\n\t    list.on(\"open\", function(pl){\r\n\t        console.log(\"PL :\", pl);\r\n\t    });},200);\r\n    });\r\n    $('<input type=\"button\" value=\"Telll Button\">').appendTo('body').on('click', function(){myAdTest.showTelllBtn()});\r\n \r\n});\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}